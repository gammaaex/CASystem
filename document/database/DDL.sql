-- MySQL Script generated by MySQL Workbench
-- Sun Jun 17 00:56:22 2018
-- Model: Sakila Full    Version: 2.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema casystem
-- -----------------------------------------------------
-- 設計方針など
-- - Railsなどのフレームワークによくある命名規則に従ってカラム名を付けている
-- - ENUMをリスト代わりに使用せず、テーブルを分割して外部キーを利用する
--   - ENUMは性別など今後定義が変わらない場合にのみ利用
-- - nullは極力排除
--   - 基本的にデフォルト値を入れることで対応（備考のデフォルト値は空文字など）
--   - 初期の状態でnullを許容しているのは日付型カラムで未知の値が入る場合のみ
--   - その他、正当な理由があればnullを許容しても良い
-- - 文字コードはutf8mb4なのでVARCHAR(255)ではなくVARCHAR(191)にしている
-- - 金額が入るカラムは通常DECIMAL型を利用するが、我々は「銭」などを利用しないためINT型で指定
-- - 備考をカラムの最大値とせず、VARCHAR(1000)としているのは文字コードの関係で、1文字で4バイト使われるため
--   - 16383文字 * 4バイト = 65532バイト
--   - テーブル全体でも65532バイト（16383文字）なので注意
--     - https://dev.mysql.com/doc/refman/5.6/ja/innodb-restrictions.html
-- - 画像などはDBに保存せず静的ファイルの参照リンクを保存したほうが良いと考えたためVARCHAR型(8190)で指定
--   - LINK型（ユーザー定義）が8190文字なのはApacheが受け付けられるURLの長さがデフォルトで8190バイトのため
DROP SCHEMA IF EXISTS `casystem` ;

-- -----------------------------------------------------
-- Schema casystem
--
-- 設計方針など
-- - Railsなどのフレームワークによくある命名規則に従ってカラム名を付けている
-- - ENUMをリスト代わりに使用せず、テーブルを分割して外部キーを利用する
--   - ENUMは性別など今後定義が変わらない場合にのみ利用
-- - nullは極力排除
--   - 基本的にデフォルト値を入れることで対応（備考のデフォルト値は空文字など）
--   - 初期の状態でnullを許容しているのは日付型カラムで未知の値が入る場合のみ
--   - その他、正当な理由があればnullを許容しても良い
-- - 文字コードはutf8mb4なのでVARCHAR(255)ではなくVARCHAR(191)にしている
-- - 金額が入るカラムは通常DECIMAL型を利用するが、我々は「銭」などを利用しないためINT型で指定
-- - 備考をカラムの最大値とせず、VARCHAR(1000)としているのは文字コードの関係で、1文字で4バイト使われるため
--   - 16383文字 * 4バイト = 65532バイト
--   - テーブル全体でも65532バイト（16383文字）なので注意
--     - https://dev.mysql.com/doc/refman/5.6/ja/innodb-restrictions.html
-- - 画像などはDBに保存せず静的ファイルの参照リンクを保存したほうが良いと考えたためVARCHAR型(8190)で指定
--   - LINK型（ユーザー定義）が8190文字なのはApacheが受け付けられるURLの長さがデフォルトで8190バイトのため
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `casystem` DEFAULT CHARACTER SET utf8mb4 ;
USE `casystem` ;

-- -----------------------------------------------------
-- Table `authorities`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `authorities` ;

CREATE TABLE IF NOT EXISTS `authorities` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
COMMENT = 'アクセス権限\n管理者、閲覧者、OBなど\n部活における役割（主幹、委員など）とは別';


-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users` ;

CREATE TABLE IF NOT EXISTS `users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(191) NOT NULL,
  `password` VARCHAR(191) NOT NULL,
  `remember_token` VARCHAR(191) NOT NULL DEFAULT '',
  `authority_id` INT UNSIGNED NOT NULL,
  `left_on` DATE NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_users_access_roles1_idx` (`authority_id` ASC),
  CONSTRAINT `fk_users_access_roles1`
    FOREIGN KEY (`authority_id`)
    REFERENCES `authorities` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '会員情報\n主にログインや認可に利用';


-- -----------------------------------------------------
-- Table `groups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `groups` ;

CREATE TABLE IF NOT EXISTS `groups` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `about` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
COMMENT = '班\nプログラミング班、グラフィックス班、ミュージック班など';


-- -----------------------------------------------------
-- Table `faculties`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `faculties` ;

CREATE TABLE IF NOT EXISTS `faculties` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
COMMENT = '学部\nコンピュータ理工学部、情報理工学部、経済学部など';


-- -----------------------------------------------------
-- Table `roles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `roles` ;

CREATE TABLE IF NOT EXISTS `roles` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
COMMENT = '部活動における役割\n主幹、財務、合宿委員など';


-- -----------------------------------------------------
-- Table `people`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `people` ;

CREATE TABLE IF NOT EXISTS `people` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `last_name` VARCHAR(191) NOT NULL,
  `first_name` VARCHAR(191) NOT NULL,
  `last_name_kana` VARCHAR(191) NOT NULL,
  `first_name_kana` VARCHAR(191) NOT NULL,
  `gender` ENUM('不明','男性','女性','適用不能') NOT NULL,
  `faculty_id` INT UNSIGNED NOT NULL,
  `admitted_on` DATE NOT NULL,
  `student_number` TINYINT NOT NULL,
  `email` VARCHAR(191) NOT NULL,
  `phone` VARCHAR(191) NOT NULL DEFAULT '',
  `group_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `interest` VARCHAR(191) NOT NULL DEFAULT '',
  `special_ability` VARCHAR(191) NOT NULL DEFAULT '',
  `portfolio` VARCHAR(1000) NOT NULL DEFAULT '',
  `image_link` VARCHAR(8190) NOT NULL DEFAULT '',
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_people_groups1_idx` (`group_id` ASC),
  INDEX `fk_people_users1_idx` (`user_id` ASC),
  INDEX `fk_people_faculties1_idx` (`faculty_id` ASC),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC),
  INDEX `fk_people_roles1_idx` (`role_id` ASC),
  CONSTRAINT `fk_people_groups1`
    FOREIGN KEY (`group_id`)
    REFERENCES `groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_people_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_people_faculties1`
    FOREIGN KEY (`faculty_id`)
    REFERENCES `faculties` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_people_roles1`
    FOREIGN KEY (`role_id`)
    REFERENCES `roles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '個人情報';


-- -----------------------------------------------------
-- Table `project_statuses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_statuses` ;

CREATE TABLE IF NOT EXISTS `project_statuses` (
  `id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `projects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `projects` ;

CREATE TABLE IF NOT EXISTS `projects` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `about` VARCHAR(191) NOT NULL,
  `comment` VARCHAR(1000) NOT NULL DEFAULT '',
  `proposal_link` VARCHAR(8190) NOT NULL DEFAULT '',
  `project_status_id` INT UNSIGNED NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_projects_project_statuses1_idx` (`project_status_id` ASC),
  CONSTRAINT `fk_projects_project_statuses1`
    FOREIGN KEY (`project_status_id`)
    REFERENCES `project_statuses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'プロジェクト';


-- -----------------------------------------------------
-- Table `users_projects`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users_projects` ;

CREATE TABLE IF NOT EXISTS `users_projects` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `project_id` INT UNSIGNED NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  INDEX `fk_people_projects_projects1_idx` (`project_id` ASC),
  INDEX `fk_people_projects_users1_idx` (`user_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_people_projects_projects1`
    FOREIGN KEY (`project_id`)
    REFERENCES `projects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_people_projects_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'ユーザーとプロジェクトの関係テーブル\nユーザーが所属するプロジェクトを設定する';


-- -----------------------------------------------------
-- Table `project_progresses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `project_progresses` ;

CREATE TABLE IF NOT EXISTS `project_progresses` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `project_id` INT UNSIGNED NOT NULL,
  `progress` VARCHAR(1000) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_project_progresses_projects1_idx` (`project_id` ASC),
  CONSTRAINT `fk_project_progresses_projects1`
    FOREIGN KEY (`project_id`)
    REFERENCES `projects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'プロジェクトの進捗状況';


-- -----------------------------------------------------
-- Table `equipments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `equipments` ;

CREATE TABLE IF NOT EXISTS `equipments` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
COMMENT = '部活の備品\n図書などもここに含まれる';


-- -----------------------------------------------------
-- Table `lending_histories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `lending_histories` ;

CREATE TABLE IF NOT EXISTS `lending_histories` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `equipment_id` INT UNSIGNED NOT NULL,
  `lent_at` DATETIME NOT NULL,
  `returned_at` DATETIME NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_lending_histories_equipments1_idx` (`equipment_id` ASC),
  INDEX `fk_lending_histories_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_lending_histories_equipments1`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `equipments` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_lending_histories_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '貸出履歴';


-- -----------------------------------------------------
-- Table `budget`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `budget` ;

CREATE TABLE IF NOT EXISTS `budget` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `summary` VARCHAR(191) NOT NULL,
  `amount` INT NOT NULL,
  `traded_on` VARCHAR(191) NOT NULL,
  `seller` VARCHAR(191) NOT NULL,
  `comment` VARCHAR(1000) NOT NULL DEFAULT '',
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = '予算の収支情報';


-- -----------------------------------------------------
-- Table `event_categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `event_categories` ;

CREATE TABLE IF NOT EXISTS `event_categories` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
COMMENT = 'イベントの種類\nコンパ、合宿など';


-- -----------------------------------------------------
-- Table `events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events` ;

CREATE TABLE IF NOT EXISTS `events` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `held_on` DATE NULL COMMENT '開催日が未定の状態で参加者を募る場合を考慮し、nullを許容\n',
  `summary` VARCHAR(1000) NOT NULL DEFAULT '',
  `event_categories_id` INT UNSIGNED NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC),
  INDEX `fk_events_event_categories1_idx` (`event_categories_id` ASC),
  CONSTRAINT `fk_events_event_categories1`
    FOREIGN KEY (`event_categories_id`)
    REFERENCES `event_categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'イベント\nコンパや合宿といったもの\n開催されるたびにイベントを設定する';


-- -----------------------------------------------------
-- Table `users_events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users_events` ;

CREATE TABLE IF NOT EXISTS `users_events` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `event_id` INT UNSIGNED NOT NULL,
  `is_attended` TINYINT(1) NOT NULL,
  `amount` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_attending_statuses_events1_idx` (`event_id` ASC),
  INDEX `fk_people_events_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_attending_statuses_events1`
    FOREIGN KEY (`event_id`)
    REFERENCES `events` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_people_events_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'ユーザーとイベントの関係テーブル\nイベントへの出席状況などを記録する';


-- -----------------------------------------------------
-- Table `questionnaires`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `questionnaires` ;

CREATE TABLE IF NOT EXISTS `questionnaires` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(191) NOT NULL,
  `comment` VARCHAR(1000) NOT NULL DEFAULT '',
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'アンケート本体';


-- -----------------------------------------------------
-- Table `question_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `question_types` ;

CREATE TABLE IF NOT EXISTS `question_types` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
COMMENT = 'フォームの種類\nテキストエリア、日付、ラジオボタンなど';


-- -----------------------------------------------------
-- Table `questionnaire_contents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `questionnaire_contents` ;

CREATE TABLE IF NOT EXISTS `questionnaire_contents` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `questionnaire_id` INT UNSIGNED NOT NULL,
  `question` VARCHAR(191) NOT NULL,
  `question_type_id` INT UNSIGNED NOT NULL,
  `comment` VARCHAR(1000) NOT NULL DEFAULT '',
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_questionnaire_contents_questionnaires1_idx` (`questionnaire_id` ASC),
  INDEX `fk_questionnaire_contents_question_types1_idx` (`question_type_id` ASC),
  CONSTRAINT `fk_questionnaire_contents_questionnaires1`
    FOREIGN KEY (`questionnaire_id`)
    REFERENCES `questionnaires` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_questionnaire_contents_question_types1`
    FOREIGN KEY (`question_type_id`)
    REFERENCES `question_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'アンケートにおける単一の質問';


-- -----------------------------------------------------
-- Table `questionnaire_answers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `questionnaire_answers` ;

CREATE TABLE IF NOT EXISTS `questionnaire_answers` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `questionnaire_content_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `answer` VARCHAR(191) NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  `created_by` VARCHAR(191) NOT NULL,
  `updated_by` VARCHAR(191) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_questionnaire_answers_questionnaire_contents1_idx` (`questionnaire_content_id` ASC),
  INDEX `fk_questionnaire_answers_users1_idx` (`user_id` ASC),
  CONSTRAINT `fk_questionnaire_answers_questionnaire_contents1`
    FOREIGN KEY (`questionnaire_content_id`)
    REFERENCES `questionnaire_contents` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_questionnaire_answers_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = '単一の質問に対する回答';

SET SQL_MODE = '';
GRANT USAGE ON *.* TO casystem;
 DROP USER casystem;
SET SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';
CREATE USER 'casystem';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
